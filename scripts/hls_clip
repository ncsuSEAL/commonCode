#!/bin/bash
###############################################################################
# Author: Owen Smith
# Purpose: Clip HLS data v1.4 to bounding box and convert to GeoTIFF
###############################################################################

usage () {
cat << EOF
usage: ./hls_clip -i ~/indir
-i    | --indir      (Required)     Input directory of HLS v1.4 (*.HDF)
-o    | --outdir     (Required)     Output directory for clipped GeoTIFFs
-b    | --bbox       (Required)     Clipping bounding box in projection of tile
-n    | --nodata                    Nodata value (default: -1000)
-v    | --verbose                   Show progress
-h    | --help                      Show this help menu
EOF
}

fails () {
    echo "Output directory does not exist"
    exit
}

# Defaults
nodata=-1000
verbose=0

while [ "$1" != "" ]; do
    case $1 in
        -i | --indir )
            shift
            indir=$1
        ;;
        -o | --outdir )
            shift
            outdir=$1
        ;;
        -b | --bbox )
            shift
            bbox=$1
        ;;
        -n | --nodata )
            shift
            nodata=$1
        ;;
        -v | --verbose )
            shift
            verbose=1
        ;;
        -h | --help )    usage
            exit
        ;;
        * )              usage
            exit 1
    esac
    shift
done

#Dirty param verification
if [ -z "$indir" ]; then
    echo "Input directory is required, use -i or --indir."
    exit
fi
if [ -z "$outdir" ]; then
    echo "Output directory is required, use -o or --outdir."
    exit
fi
if [ -z "$bbox" ]; then
    echo "Please specify bounding box to clip to."
    exit
fi


cd "$outdir" || fails


for file in `find $indir -name "*.hdf" -type f`; do
    filename=$(basename -- "$file")
    basefile="${filename%.*}"
    if [ "$verbose" -eq "1" ]; then
        printf "$(date +"%r")\tclipping $filename to $bbox\n"
    fi
    gdal_translate -sds "$file" "${basefile}_tr.tif" -projwin $bbox \
        -a_nodata "$nodata" -q
    gdal_merge.py -seperate -o "${basefile}_clipped_17RMP_Jacksonville.tif" \
        "$basefile"_tr*tif -n "$nodata" -a_nodata "$nodata" -q
    rm -rf "$basefile"_tr*tif
done

